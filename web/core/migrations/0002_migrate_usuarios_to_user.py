# Generated by Django 5.1.6 on 2025-03-16 14:45

from django.db import migrations
from django.contrib.auth.hashers import make_password

def migrate_usuarios_to_user(apps, schema_editor):
    # Get the models
    Usuarios = apps.get_model('core', 'Usuarios')
    User = apps.get_model('core', 'User')
    
    # Get all existing Usuarios
    usuarios = Usuarios.objects.all()
    
    # Create a User for each Usuario
    for usuario in usuarios:
        # Check if a user with this username already exists
        username = usuario.email.split('@')[0]  # Use part of email as username
        counter = 1
        original_username = username
        
        # Make sure username is unique
        while User.objects.filter(username=username).exists():
            username = f"{original_username}{counter}"
            counter += 1
        
        # Create the new user
        user = User.objects.create(
            id=usuario.id,
            username=username,
            email=usuario.email,
            nome=usuario.nome,
            avatar=usuario.avatar,
            created_at=usuario.created_at,
            password=make_password(usuario.password)  # Hash the password
        )
        
        # Save the user
        user.save()

def reverse_migrate(apps, schema_editor):
    # This is a one-way migration, so we don't need to implement reverse
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(migrate_usuarios_to_user, reverse_migrate),
    ]
